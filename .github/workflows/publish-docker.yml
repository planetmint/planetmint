# Copyright Â© 2020 Interplanetary Database Association e.V.,
# Planetmint and IPDB software contributors.
# SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)
# Code is Apache-2.0 and docs are CC-BY-4.0

name: publish-docker
on: [workflow_dispatch,push]

jobs:
  audit:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install pip-audit
        run: pip install --upgrade pip pip-audit

      - name: Install dependencies
        run: pip install .

      - name: Create requirements.txt
        run: pip freeze > requirements.txt

      - name: Audit dependencies
        run: pip-audit


#  publish-docker:
#    runs-on: ubuntu-latest
#    steps:
#      # Get the repository's code
#      - name: Checkout
#        uses: actions/checkout@v2
      # https://github.com/docker/setup-qemu-action
      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v1
      ## https://github.com/docker/setup-buildx-action
      #- name: Set up Docker Buildx
      #  id: buildx
      #  uses: docker/setup-buildx-action@v1
      #- name: Login to GHCR
      #  if: github.event_name != 'pull_request'
      #  uses: docker/login-action@v1
      #  with:
      #    registry: ghcr.io
      #    username: ${{ github.repository_owner }}
      #    password: ${{ secrets.GITHUB_TOKEN }}
      #- name: Docker meta
      #  id: semver # you'll use this in the next step
      #  uses: docker/metadata-action@v3
      #  with:
      #    # list of Docker images to use as base name for tags
      #    images: |
      #      ghcr.io/planetmint/planetmint
      #    # Docker tags based on the following events/attributes
      #    tags: |
      #      type=schedule
      #      type=ref,event=branch
      #      type=ref,event=pr
      #      type=semver,pattern={{version}}
      #      type=semver,pattern={{major}}.{{minor}}
      #      type=semver,pattern={{major}}
      #      type=sha
      #- name: Build and push
      #  uses: docker/build-push-action@v2
      #  with:
      #    context: .
      #    platforms: linux/amd64,linux/arm/v7,linux/arm/v8
      #    push: ${{ github.event_name != 'pull_request' }}
      #    tags: ${{ steps.<meta_id>.outputs.tags }}
      #    labels: ${{ steps.<meta_id>.outputs.labels }}